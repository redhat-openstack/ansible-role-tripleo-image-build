---
# workarounds to not include a bunch of DIB elements with a single line of bash
- name: Template script with workarounds for overcloud-full image
  template:
    src: "{{ artib_dib_workaround_script }}"
    dest: "{{ artib_working_dir }}/dib-workaround.sh"

- name: DIB workarounds
  shell: >
    virt-customize -m {{ artib_virt_customize_ram }}
    --smp {{ artib_virt_customize_cpu }}
    -a {{ artib_working_dir }}/overcloud-base.qcow2
    --run {{ artib_working_dir }}/dib-workaround.sh
  environment:
    LIBGUESTFS_BACKEND: direct
  when: artib_dib_workarounds

- name: script to prepare for image building with DIB
  template:
    src: "{{ artib_dib_prepare_script }}"
    dest: "{{ artib_working_dir }}/dib-prepare-script.sh"
    mode: 0744

- name: Run DIB prep script
  shell: >
    {{ artib_working_dir }}/dib-prepare-script.sh
  become: true

- name: ensure we can sudo without requiring tty for async tasks
  lineinfile:
    dest: /etc/sudoers
    line: '#Defaults requiretty'
    regexp: '^Defaults\s+requiretty'
    backup: yes
  become: true

# handle additional var env based DIB settings
- name: Optional DIB environmental inject template
  template:
    src: dib-optional-env-inject.sh.j2
    dest: "{{ artib_working_dir }}/dib-optional-env-inject.sh"
    mode: 0744
  become: true

- name: Template yaml definition for the ironic-python-agent ramdisk
  template:
    src: "{{ artib_agent_ramdisk_yaml_template }}"
    dest: "{{ artib_working_dir }}/ironic-python-agent.yaml"

- name: Template yaml definition for the overcloud-full image
  template:
    src: "{{ artib_overcloud_full_yaml_template }}"
    dest: "{{ artib_working_dir }}/overcloud-full.yaml"

- name: Build the ironic-python-agent ramdisk
  tripleo_build_images:
    config_files:
      - "{{ artib_working_dir }}/ironic-python-agent.yaml"
    output_directory: "{{ artib_working_dir }}"
  environment:
    DIB_LOCAL_IMAGE: "{{ artib_working_dir }}/minimal-base.qcow2"
    DIB_DEFAULT_INSTALLTYPE: package
    ELEMENTS_PATH: "{{ artib_dib_elements_path|join(':') }}"
  async: 3600
  poll: 0
  register: done_build_ironic

- name: Build the overcloud-full image
  tripleo_build_images:
    config_files:
      - "{{ artib_working_dir }}/overcloud-full.yaml"
    output_directory: "{{ artib_working_dir }}"
  environment:
    DIB_LOCAL_IMAGE: "{{ artib_working_dir }}/minimal-base.qcow2"
    DIB_DEFAULT_INSTALLTYPE: package
    ELEMENTS_PATH: "{{ artib_dib_elements_path|join(':') }}"
# Needed for corosync to be able to use hostnames
# https://bugs.launchpad.net/tripleo/+bug/1447497
    DIB_CLOUD_INIT_ETC_HOSTS: ''

- name: Async_Poll --> Wait for ironic task completion
  async_status:
    jid: "{{ done_build_ironic.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  retries: 720
  delay: 5

