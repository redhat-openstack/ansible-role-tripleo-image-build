- name: install rsync
  yum:
    name: rsync
    state: present
  become: true

# the existing infra does not allow for network connectivity between CI instances used to build the images and
# the network location for resultant images.  For now this role uses the local ansible machine (jenkins slave)
# as a staging area, which is removed after images are moved via rsync --> {{ publish_dest_base }}
- name: create local dir to store images
  local_action: "command mkdir -p {{ lookup('env', 'WORKSPACE') }}/images/{{ release }}/{{ build_system }}/{{ artib_image_stage_location }}"

- name: create delorean_hash files
  local_action: "command echo {{ delorean_hash }} {{ lookup('env', 'WORKSPACE') }}/images/{{ release }}/{{ build_system }}/{{ artib_image_stage_location }}/delorean_hash"
  when: delorean_hash is defined

- name: fetch files to local workspace
  synchronize:
    src: "{{ working_dir }}/{{ item }}"
    dest: "{{ lookup('env', 'WORKSPACE') }}/images/{{ release }}/{{ build_system }}/{{ artib_image_stage_location }}/{{ item }}"
    mode: pull
  with_items: "{{ artifacts }}"

- name: publish images
  delegate_to: localhost
  command: >
    rsync
    {% if publish_dest_key is defined %}
    -e 'ssh -i {{ publish_dest_key }}'
    {% endif %}
    --delete -av
    {{ lookup('env', 'WORKSPACE') }}/images/{{ release }}/{{ build_system }}/{{ artib_image_stage_location }}/
    {% if publish_dest_key is defined %}
    {{ publish_dest_user }}@{{ publish_dest_host }}:{{ publish_dest_basepath }}/{{ release }}/{{ build_system }}/{{ artib_image_stage_location }}/
    {% else %}
    {{ publish_dest_user }}@{{ publish_dest_host }}::{{ publish_dest_basepath }}/{{ release }}/{{ build_system }}/{{ artib_image_stage_location }}/
    {% endif %}

- name: remove the images from the workspace
  local_action: "command rm -rf {{ lookup('env', 'WORKSPACE') }}/images/{{ release }}/{{ build_system }}/{{ artib_image_stage_location }}"
